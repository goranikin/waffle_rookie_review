[
  {
    "title": "Next.js 앱 배포하기 (Bun, EC2, nginx, pm2)",
    "description": "Next.js와 Bun으로 만든 애플리케이션을 배포합니다. Vercel이 아닌 AWS의 EC2를 이용하고, nginx와 pm2를 통해 서버를 관리합니다.",
    "slug": "deploy-nextjs-app-with-bun-ec2-nginx-pm2",
    "publishDate": "2025-03-02",
    "thumbnailUrl": "/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/1.png",
    "content": "const{Fragment:n,jsx:e,jsxs:l}=arguments[0];function _createMdxContent(c){const r={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",hr:\"hr\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",...c.components};return l(n,{children:[e(r.p,{children:\"드디어 자동 배포까지 구축했다! 🎉\"}),\"\\n\",e(r.p,{children:\"개인적인 프로젝트를 진행한다고 토이프로젝트에서 굵직굵직한 개발 요소를 건드리지 못했는데(이 자리를 빌어 인프라를 전부 책임져준 연우에게 감사를), 드디어 뭐가 뭔지 얼추 알 것 같다. 우선 적어도 Docker까지는 다뤄본 뒤 다시 프론트 공부를 할 계획.\"}),\"\\n\",e(r.p,{children:\"개발자로 커리어를 시작하겠다는 다짐을 하고 나니 한 결 마음이 가벼워졌다. 그리고 개발이 재미있어지기도 했고. 더 배워야겠다는 마음을 먹으니 완전히 또 다른 세계다. 열심히 배워봐야지.\"}),\"\\n\",e(r.p,{children:\"먹고 산다는 것에 대한 지난 날의 고민들은 학기 중에 글로 남길 계획!\"}),\"\\n\",e(r.hr,{}),\"\\n\",e(r.p,{children:\"Next.js로 작성한 앱을 AWS EC2로 배포하는 방법은 쉽게 찾아볼 수 있다.\\n문제는 대부분이 나처럼 공부하며 정리한 글이다보니 온전히 신뢰하기 어렵다는 점.\\nIAM 역할에 정책을 지정할 때 필요 없는 정책이 끼어있다든가, 혹은 yml 파일이나 nginx config 파일의 설정이 완전히 잘못 되있다던가 등등...\\n그래서 머리 깨져가며 배운 내용을 정리하며 최대한 그 이유들을 작성해보겠다.\"}),\"\\n\",e(r.h2,{children:\"1. EC2 인스턴스\"}),\"\\n\",e(r.p,{children:\"React를 배포할 땐 S3와 같은 정적 파일 호스팅 서비스만 있어도 충분하다.\\n빌드를 통해 만들어진 정적 HTML과 Javascript 파일을 클라이언트측에 건네면, 클라이언트 쪽에서 받은 데이터를 기반으로 렌더링하기 때문이다. 이를 Client Side Rendering(CSR)이라 한다.\"}),\"\\n\",e(r.p,{children:\"Next.js는 CSR 방식의 호스팅도 지원하지만 Server Side Rendering(SSR)도 제공한다.\\nSSR은 클라이언트의 요청에 따라 서버가 필요한 데이터를 가져오고, 이를 기반으로 렌더링한 뒤 클라이언트에게 전달한다.\\n이 외에도 백엔드 API 라우팅 기능 등 서버측에서 처리해야 할 기능들을 제공하기 위해 배포할 때 Node.js 런타임 환경이 필요하고,\\n이를 위해 서버를 돌려야 한다. (물론 React도 데이터 페칭을 위한 백엔드 API 서버는 필요로 한다.\\n빌드된 파일을 어떤 식으로 호스팅하느냐의 문제만 보면 React는 서버 없이도 가능하다는 이야기.)\"}),\"\\n\",e(r.p,{children:\"집에 있는 컴퓨터를 24시간 돌리며 서버 컴퓨터로 만들 게 아니라면 보통은 가상 머신을 빌려 서버로 이용한다.\\n이러한 서버를 대여해주는 서비스가 AWS의 EC2이다. 가상 머신 하나를 빌릴 때 그걸 우리는 '인스턴스'라 부른다.\"}),\"\\n\",e(r.p,{children:\"그러면 배포를 위해 우리의 서버를 만들어보자.\"}),\"\\n\",e(r.h3,{children:\"1-1) 인스턴스 생성\"}),\"\\n\",e(r.p,{children:\"AWS에 접속해 EC2 서비스에서 인스턴스 생성을 누른다.\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/1.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"우리가 빌릴 가상 서버의 운영체제와 필요한 각종 소프트웨어의 성능을 골라야 한다.\\nQuick Start로 운영체제는 Ubuntu, 그리고 이미지는 프리티어 사용이 가능한 아무거나 고르자.\"}),\"\\n\",e(r.p,{children:\"Ubuntu는 서버 환경에서 많이 쓰이는 Linux 배포판이다.\\n운영체제를 딥하게 파지 않는 이상 Ubuntu를 쓰는 게 무난하다. 정보도 많고 라이센스 비용도 없고.\"}),\"\\n\",l(r.p,{children:[e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/2.png\",alt:\"\"}),\"\\n\",e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/3.png\",alt:\"\"})]}),\"\\n\",e(r.p,{children:\"인스턴스에 접속하기 위한 키 페어를 생성하자. 나중에 생성된 키 파일을 가지고 인스턴스에 접속한다.\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/4.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"네트워크 설정은 SSH, HTTPS, HTTP 트래픽 전부 허용하자.\\n기본적으로 우리는 SSH 트래픽을 통해 인스턴스에 접속할 거고, 나중에 브라우저에서 HTTP 프로토콜을 통해 인스턴스로 요청을 보내면 인스턴스에서 실행 중인 웹 애플리케이션들이 웹 페이지를 브라우저에게 제공하게 된다.\\nHTTP나 HTTPS의 경우 요청을 보낼 수 있는 IP를 제한할 필요는 없지만, SSH의 경우 보안을 위해 특정 IP 주소만 허용하는 게 좋다. 하지만 나는 귀찮으니 그냥 열어놨다.\"}),\"\\n\",e(r.p,{children:\"이후 인스턴스를 생성한 뒤 우리의 서버를 세팅해보자.\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/5.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"인스턴스로 들어가 위쪽에 '연결' 버튼을 누르자.\"}),\"\\n\",e(r.p,{children:\"아래에 있는 예: ssh -i ... 명령어를 통해 인스턴스에 접속할 수 있다.\\n아까 생성한 키 파일이 있는 위치로 이동한 뒤 명령어를 실행하자.\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/6.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"짠. ubuntu로 접속했다.\"}),\"\\n\",e(r.hr,{}),\"\\n\",e(r.h3,{children:\"1-2) 인스턴스 세팅\"}),\"\\n\",e(r.p,{children:\"접속한 인스턴스에서 배포를 위한 세팅을 한다. 위 ubuntu에서 이어서 하면 된다.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" update\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" upgrade\"})]})]})})}),\"\\n\",e(r.p,{children:\"apt는 패키지 관리 프로그램이다. 각 소프트웨어들의 최신 버전 정보를 update하고, 그 정보를 기반으로 upgrade한다.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(r.code,{children:l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" install\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" nginx\"})]})})})}),\"\\n\",l(r.p,{children:[\"nginx 를 설치한다.nginx는 웹 서버 프로그램으로 클라이언트 요청에 따라 정적 파일을 보내주는 호스팅 역할을 한다.\\n이 외에도 다양한 기능과 역할을 수행하지만 여기서는 생략한다. 자세한 기능과 역사는 \",e(r.a,{href:\"https://www.youtube.com/watch?v=6FAwAXXj5N0\",children:\"nginx에 대한 영상\"}),\"을 참고하자!\"]}),\"\\n\",l(r.p,{children:[\"이번 프로젝트에서는 경험삼아 Bun을 사용했다. 대부분 npm을 사용하지만 여기에서는 Bun을 통해 세팅하는 과정을 소개한다.\\nnpm에 대한 정보가 필요하다면 \",e(r.a,{href:\"https://sollogging.tistory.com/91\",children:\"이 블로그\"}),\"를 참고하자!\"]}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" install\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" unzip\"}),e(r.span,{style:{color:\"#616E88\"},children:\" # unzip 설치\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"curl\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" -fsSL\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" https://bun.sh/install\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\" |\"}),e(r.span,{style:{color:\"#88C0D0\"},children:\" bash\"}),e(r.span,{style:{color:\"#616E88\"},children:\" # bun 설치\"})]})]})})}),\"\\n\",e(r.p,{children:\"Bun 설치에 필요한 unzip을 먼저 설치하고, 그 다음 Bun을 설치한다.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"echo\"}),e(r.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:'export PATH=\"$HOME/.bun/bin:$PATH\"'}),e(r.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\" >>\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" ~/.bashrc\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"source\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" ~/.bashrc\"})]})]})})}),\"\\n\",e(r.p,{children:\"설치가 완료된 뒤 Bun의 실행 파일 경로를 환경 변수에 추가해준다(대부분 알아서 잘 되지만 혹시 모르니 한 번 더 수동으로 추가).\\n그리고 bun -v 명령어로 잘 설치되었는지 확인해보자.\"}),\"\\n\",e(r.p,{children:\"이후 GitHub 레포지토리에서 프로젝트를 가져온 뒤, 프로젝트의 루트 디렉토리로 이동한다.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"bun\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" install\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"bun\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" run\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" build\"})]})]})})}),\"\\n\",e(r.p,{children:\"bun을 이용해 의존성을 설치하고 빌드까지 해준다.\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/7.png\",alt:\"\"})}),\"\\n\",e(r.hr,{}),\"\\n\",e(r.h3,{children:\"1-3) nginx 세팅\"}),\"\\n\",e(r.p,{children:\"프로젝트가 깔린 경로는 /home/ubuntu/프로젝트 이름 일 것이다.\\n여기서 루트 디렉토리까지 이동한 다음, 설정 파일 경로로 접속하자.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(r.code,{children:l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"cd\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" /etc/nginx/sites-available\"})]})})})}),\"\\n\",e(r.p,{children:\"이 디렉토리는 nginx에서 각 웹사이트에 대한 서버 설정 파일을 저장하는 곳이다.\\n서버 설정을 한 뒤, /etc/nginx/sites-enabled 디렉토리에 심볼릭 링크(바로가기와 비슷한 개념)로 연결하면 된다.\"}),\"\\n\",e(r.p,{children:\"이미 존재하는 default 설정은 지정한 웹사이트가 아닌 다른 요청을 처리하는데 쓰인다.\\n웹사이트별로 설정이 다르므로 보통은 도메인 이름으로 해주면 된다.\\n나는 도메인 연결을 안 한 상태이니 레포지토리 이름인 waffle_rookie_review.conf 로 생성했다.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" touch\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" waffle_rookie_review.conf\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" vim\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" waffle_rookie_review.conf\"})]})]})})}),\"\\n\",e(r.p,{children:\"waffle_rookie_review.conf\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"server\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" {\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"    listen\"}),e(r.span,{style:{color:\"#B48EAD\"},children:\" 80\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"    server_name\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" 퍼블릭\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" IPv4\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" 주소\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",e(r.span,{className:\"line\"}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"    location\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" /\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" {\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"        proxy_pass\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" http://localhost:3000\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"        proxy_http_version\"}),e(r.span,{style:{color:\"#B48EAD\"},children:\" 1.1\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"        proxy_set_header\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" Upgrade\"}),e(r.span,{style:{color:\"#D8DEE9\"},children:\" $http_upgrade\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"        proxy_set_header\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" Connection\"}),e(r.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\"upgrade\"}),e(r.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"        proxy_set_header\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" Host\"}),e(r.span,{style:{color:\"#D8DEE9\"},children:\" $host\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"        proxy_cache_bypass\"}),e(r.span,{style:{color:\"#D8DEE9\"},children:\" $http_upgrade\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\";\"})]}),\"\\n\",e(r.span,{className:\"line\",children:e(r.span,{style:{color:\"#D8DEE9FF\"},children:\"    }\"})}),\"\\n\",e(r.span,{className:\"line\",children:e(r.span,{style:{color:\"#D8DEE9FF\"},children:\"}\"})})]})})}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(r.code,{children:l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" ln\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" -s\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" /etc/nginx/sites-available/waffle_rookie_review.conf\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" /etc/nginx/sites-enabled/\"})]})})})}),\"\\n\",e(r.p,{children:\"설정 후 심볼릭 링크까지 생성해주면 끝.\"}),\"\\n\",e(r.p,{children:\"설정의 의미는 다음과 같다.\"}),\"\\n\",l(r.p,{children:[e(r.code,{children:\"listen 80\"}),\" -> 포트 번호 80으로 들어오는 요청을 처리한다.\"]}),\"\\n\",l(r.p,{children:[e(r.code,{children:\"server_name\"}),\" -> 서버의 IP 주소\"]}),\"\\n\",l(r.p,{children:[\"포트 번호 80은 HTTP의 기본 포트다. 따라서 \",e(r.code,{children:\"http://<IPv4 주소>\"}),\" 로 요청을 보내면 이 서버 블록이 활성화된다.\"]}),\"\\n\",l(r.p,{children:[e(r.code,{children:\"location /\"}),\" -> '/' 경로(루트 경로)에 대한 요청을 처리한다.\"]}),\"\\n\",l(r.p,{children:[e(r.code,{children:\"proxy_pass http://localhost:3000\"}),\" -> \",e(r.code,{children:\"http://<IPv4 주소>/\"}),\" 요청을 Next.js 서버로 전달한다.\"]}),\"\\n\",e(r.p,{children:\"이 외에는 서버단에서 요청을 처리하는데 쓰이는 세부적인 설정들이다.\"}),\"\\n\",e(r.p,{children:\"설정 파일의 문법이 올바른지 테스트해보자.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(r.code,{children:l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" nginx\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" -t\"})]})})})}),\"\\n\",e(r.p,{children:\"다음과 같이 뜨면 성공이다.\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/8.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"설정 파일이 반영되도록 nginx를 재시작하자.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(r.code,{children:l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" systemctl\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" restart\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" nginx\"})]})})})}),\"\\n\",e(r.hr,{}),\"\\n\",e(r.h3,{children:\"1-4) pm2 세팅\"}),\"\\n\",e(r.p,{children:\"pm2(Process Manager 2)는 우리의 애플리케이션을 실행하고 관리해줄 프로그램이다.\\n앱이 종료되거나 문제가 발생하면 자동으로 재시작해준다.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"bun\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" install\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" pm2\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" -g\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"pm2\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" start\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" bun\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" --name\"}),e(r.span,{style:{color:\"#ECEFF4\"},children:' \"'}),e(r.span,{style:{color:\"#A3BE8C\"},children:\"waffle_rookie_review\"}),e(r.span,{style:{color:\"#ECEFF4\"},children:'\"'}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" --\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" start\"})]})]})})}),\"\\n\",e(r.p,{children:\"라고 하면... node.js를 찾지 못했다고 뜨며 실행이 안 된다.\\n실행은 bun으로 하지만 pm2가 기본적으로 node.js 환경 위에서 돌아가나보다.\\nnode.js를 설치해주자.\"}),\"\\n\",e(n,{children:e(r.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:l(r.code,{children:[l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"curl\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" -o-\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh\"}),e(r.span,{style:{color:\"#81A1C1\"},children:\" |\"}),e(r.span,{style:{color:\"#88C0D0\"},children:\" bash\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"source\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" ~/.bashrc\"})]}),\"\\n\",l(r.span,{className:\"line\",children:[e(r.span,{style:{color:\"#88C0D0\"},children:\"nvm\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" install\"}),e(r.span,{style:{color:\"#A3BE8C\"},children:\" --lts\"})]})]})})}),\"\\n\",e(r.p,{children:\"그리고 다시 pm2 start bun ~~ 명령어를 실행해주면...\"}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/9.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"서버가 실행됐다!\"}),\"\\n\",l(r.p,{children:[\"그리고 \",e(r.code,{children:\"http://<Public IPv4 주소>\"}),\" 로 접속해보면...\"]}),\"\\n\",e(r.p,{children:e(r.img,{src:\"/development/deployment-of-nextjs-with-bun-using-ec2-nginx-pm2/10.png\",alt:\"\"})}),\"\\n\",e(r.p,{children:\"이렇게 배포는 끝!\"}),\"\\n\",e(r.hr,{}),\"\\n\",e(r.p,{children:\"이모저모\"}),\"\\n\",l(r.ol,{children:[\"\\n\",l(r.li,{children:[\"\\n\",e(r.p,{children:\"EC2 인스턴스에 지정된 퍼블릭 IPv4 주소는 인스턴스를 재부팅하면 새롭게 할당받는다.\\n그래서 고정적인 IPv4 주소를 얻으려면 Elastic IP를 할당받으면 된다.\"}),\"\\n\"]}),\"\\n\",l(r.li,{children:[\"\\n\",l(r.p,{children:[\"Bun 명령어로 실행은 했지만, 런타임 환경이 Bun인 걸 좀 더 확실하게 확인할 수 있을까?\\n인스턴스에서 명령어 \",e(r.code,{children:\"pm2 describe <app-name>\"}),\"을 실행하면 \",e(r.code,{children:\"script path: /home/ubuntu/.bun/bin/bun\"}),\" 으로 지정된 걸 볼 수 있다.\\n더 나아가 node.js version이 N/A로 현재 런타임 환경이 node.js 가 아님을 알 수 있다!\"]}),\"\\n\"]}),\"\\n\",l(r.li,{children:[\"\\n\",e(r.p,{children:\"vim editor를 처음 만났을 때 매우 당황스러웠다.\\n나가는 법을 몰라 터미널을 강제 종료했던 과거의 나... 이제야 CLI 기반으로 컴퓨터를 다루는 게 익숙해진 느낌이다.\"}),\"\\n\"]}),\"\\n\"]}),\"\\n\",e(r.hr,{})]})}return{default:function(n={}){const{wrapper:l}=n.components||{};return l?e(l,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};",
    "permalink": "/development/deploy-nextjs-app-with-bun-ec2-nginx-pm2"
  },
  {
    "title": "LLM에 대해",
    "description": "텍스트 애널리틱스 수업을 듣고 복습한 내용을 정리하는 글 1",
    "slug": "language-model",
    "publishDate": "2025-03-13",
    "thumbnailUrl": "/development/language-model/1.png",
    "content": "const{Fragment:e,jsx:n,jsxs:t}=arguments[0];function _createMdxContent(r){const l={img:\"img\",li:\"li\",p:\"p\",ul:\"ul\",...r.components};return t(e,{children:[n(l.p,{children:\"Word Embedding: map the words the language into a vector space, so\\nsemantically similar words are located close to each other.\\n(distributed representation)\"}),\"\\n\",n(l.p,{children:\"Starting from NNLM(Neural Network Language Model), there are\\nthe models such as Word2Vec, GloVe, FastText.\"}),\"\\n\",t(l.ul,{children:[\"\\n\",n(l.li,{children:\"Word2Vec\"}),\"\\n\"]}),\"\\n\",t(l.p,{children:[n(l.img,{src:\"/development/language-model/2.png\",alt:\"\"}),\"\\n\",n(l.img,{src:\"/development/language-model/3.png\",alt:\"\"})]}),\"\\n\",t(l.ul,{children:[\"\\n\",n(l.li,{children:\"GloVe\"}),\"\\n\"]}),\"\\n\",n(l.p,{children:n(l.img,{src:\"/development/language-model/4.png\",alt:\"\"})}),\"\\n\",t(l.ul,{children:[\"\\n\",n(l.li,{children:\"FastText\"}),\"\\n\"]}),\"\\n\",t(l.p,{children:[n(l.img,{src:\"/development/language-model/5.png\",alt:\"\"}),\"\\n\",n(l.img,{src:\"/development/language-model/6.png\",alt:\"\"})]}),\"\\n\",n(l.p,{children:\"the sentences are tokenized and then fed into a language model.\"}),\"\\n\",n(l.p,{children:\"In first, the tokens are embedded into vectors using a embedding matrix.\\nwhy embed them? For analysing the natural language, we need to represent each word as a vector, which has real number values.\"}),\"\\n\",n(l.p,{children:n(l.img,{src:\"/development/language-model/1.png\",alt:\"\"})}),\"\\n\",n(l.p,{children:\"Embedding matrix is called 'W_E', represented as the upper picture. This is gained by training.\"})]})}return{default:function(e={}){const{wrapper:t}=e.components||{};return t?n(t,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "permalink": "/development/language-model"
  },
  {
    "title": "Next.js 앱 CI/CD 구축하기 (Bun, GitHub Actions, CodeDeploy)",
    "description": "Next.js와 Bun으로 만든 애플리케이션을 배포합니다. Vercel이 아닌 AWS의 EC2를 이용하고, nginx와 pm2를 통해 서버를 관리합니다.",
    "slug": "setup-ci-cd-with-codedeploy-github-actions",
    "publishDate": "2025-03-02",
    "thumbnailUrl": "/development/setup-ci-cd-with-codedeploy-github-actions/1.png",
    "content": "const{Fragment:l,jsx:n,jsxs:e}=arguments[0];function _createMdxContent(s){const c={a:\"a\",code:\"code\",h3:\"h3\",h5:\"h5\",hr:\"hr\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",ul:\"ul\",...s.components};return e(l,{children:[n(c.p,{children:\"수정 사항이 있을 때마다 매번 EC2 인스턴스에 들어가 레포지토리를 클론하고 빌드하는 건 번거로운 과정이다. 그래서 배포를 자동화해 주는 작업을 통해 수고로움을 덜 수 있다. 흔히 CI/CD로 부르는데 용어가 뭔지 간단하게 살펴보자.\"}),\"\\n\",n(c.p,{children:\"Continuous Integration\"}),\"\\n\",e(c.ul,{children:[\"\\n\",n(c.li,{children:\"코드의 변경사항을 합쳐서 빌드하고 테스트하는 과정을 말한다. 수정 사항이 애플리케이션을 터친다면 CI에서 막히는 셈이다.\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"Continuous Delivery & Deployment\"}),\"\\n\",e(c.ul,{children:[\"\\n\",n(c.li,{children:\"CI 단계를 통과한 수정 사항을 배포한다. 최종 배포를 수동으로 트리거하면 Delivery, 자동으로 하면 Deployment라 부른다.\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"CI/CD는 다음과 같은 파이프라인으로 구성된다.\"}),\"\\n\",e(c.ol,{children:[\"\\n\",n(c.li,{children:\"코드 변경\"}),\"\\n\",n(c.li,{children:\"빌드\"}),\"\\n\",n(c.li,{children:\"테스트\"}),\"\\n\",n(c.li,{children:\"배포 준비\"}),\"\\n\",n(c.li,{children:\"배포\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"이번 포스트에서는 위 파이프라인 작업들을 자동화할 것이다. 내 프로젝트는 Bun을 이용해 진행하므로 npm이나 yarn 패키지 관리를 쓰고 런타임 환경을 node.js로 쓴다면 적절하게 바꿔줘야 한다!\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"YAML\"}),\"\\n\",n(c.p,{children:\"YAML은 JSON의 상위 호환 문법으로 보통 configuration 작업에 많이 쓰인다. 자동 배포를 위해 설정해 주는 데이터 파일도 전부 YAML 문법으로 쓰인다. 간단하게 YAML 문법에 대해 소개하자면...\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 주석을 지원한다!\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# '', \\\"\\\" 모두 지원한다. \\\\n같은 이스케이프 문자나 :같은 yaml 문법에 쓰이는 기호를 쓸 땐 quote로 감싸야 한다.\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 프로퍼티 이름에 띄어쓰기도 가능하다.\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"example:\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"with quotes\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"example:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" without\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" quotes\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# >, | 를 사용해 긴 문장을 표현할 수 있다. >는 space, |는 \\\\n 역할이다.\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"한글도:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" 지원한다는\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" 사실\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# null을 사용 가능하며, ~ 기호로 단축 표현할 수 있다.\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"null\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" value:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" null\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"null\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" shorthand:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ~\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 배열은 - 로 구분한다.\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#88C0D0\"},children:\"array:\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" apple\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" banana\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    -\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 12345\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" a:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" b\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# json 스타일도 가능하다. 그러나 json의 배열 기능을 보완하는데 있어 yaml의 장점이 있다는 사실.\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 따옴표나 쉼표를 쓰지 않기 위해 yaml이 하이픈을 만들었으니 위처럼 사용하자.\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"json\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" style\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" array:\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" [\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#88C0D0\"},children:\"    apple,\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    'banana'\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\",\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#88C0D0\"},children:\"    12345,\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    a:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" b,\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"]\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 객체는 들여쓰기와 :로 구분\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#88C0D0\"},children:\"object:\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    name:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" namu\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" wiki\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    type\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" dictionary\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    primary\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" color:\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#88C0D0\"},children:\"        gradient:\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"            start:\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 0x00A495\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"            end: 0x13AD65\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"        header:\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 0x008275\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 마찬가지로 따옴표와 쉼표, 중괄호같은 낭비를 없애기 위해 yaml이 있으니 위처럼 쓰도록 하자.\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"json\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" style\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" object:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" {\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    name:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" namu\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" wiki,\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:'    \"type\"'}),n(c.span,{style:{color:\"#88C0D0\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"dictionary\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\",\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"}\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"implicit\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" null:\"}),n(c.span,{style:{color:\"#616E88\"},children:\" # 이러면 암묵적으로 null이 들어간다.\"})]})]})})}),\"\\n\",n(c.p,{children:\"이 외에는 공식문서를 참고하면 된다! 아니면 나무위키에도 잘 설명 되어있으니 참고하길...\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"GitHub Actions\"}),\"\\n\",e(c.p,{children:[\"GitHub Actions는 CI/CD를 도와주는 도구다. 어떤 식으로 쓰는지 \",n(c.a,{href:\"https://docs.github.com/ko/actions/writing-workflows/quickstart\",children:\"https://docs.github.com/ko/actions/writing-workflows/quickstart\"}),\" 를 따라 하면 바로 느낌이 온다!\"]}),\"\\n\",e(c.p,{children:[\"GitHub Actions와 YAML에 대해 작성한 글이 있으니 궁금하면 보시길~ (\",n(c.a,{href:\"https://hyeokrani.tistory.com/117\",children:\"https://hyeokrani.tistory.com/117\"}),\")\"]}),\"\\n\",n(c.p,{children:\"한 번 CI를 위한 파일을 만들고 레포지토리에 push 해보자.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ci\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#81A1C1\"},children:\"on\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  pull_request\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    branches\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" main\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  push\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    branches\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" main\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"jobs\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  ci\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    runs-on\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ubuntu-latest\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    steps\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" uses\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" actions/checkout@v4\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Setup Bun\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          curl -fsSL https://bun.sh/install | bash\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:'          echo \"BUN_INSTALL=$HOME/.bun\" >> $GITHUB_ENV'})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:'          echo \"PATH=$HOME/.bun/bin:$PATH\" >> $GITHUB_ENV'})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Install dependencies\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" bun install\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Check\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" bun check\"})]})]})})}),\"\\n\",n(c.p,{children:\"이 workflow는 main 브랜치로의 push나 PR에 작동한다. 어떤 작업들이 시행되는지 보면,\"}),\"\\n\",e(c.ol,{children:[\"\\n\",n(c.li,{children:\"레포지토리를 클론 한다.\"}),\"\\n\",n(c.li,{children:\"Bun을 설치한다.\"}),\"\\n\",n(c.li,{children:\"Bun으로 의존성을 설치한다.\"}),\"\\n\",n(c.li,{children:\"코드를 검사한다.\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"위 과정이 잘 일어나는지 브랜치를 생성해 PR을 올려보자.\"}),\"\\n\",e(c.p,{children:[n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/1.png\",alt:\"\"}),\"\\n\",n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/2.png\",alt:\"\"})]}),\"\\n\",n(c.p,{children:\"workflow가 잘 작동했고, 코드 검사도 성공적으로 잘 끝난 걸 볼 수 있다.\\n이제 앞으로 main 브랜치에 PR로 올려주면 CI 성공 여부를 보고 합칠 수 있다.\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.p,{children:\"수정한 코드가 기존 애플리케이션을 터칠 가능성을 확인했으니, 이제 수정된 코드를 인스턴스에 올려 배포하는 과정을 자동화하면 된다.\"}),\"\\n\",n(c.p,{children:\"자동 배포의 파이프라인은 어떻게 될까?\"}),\"\\n\",e(c.p,{children:[n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/3.png\",alt:\"\"}),\"\\n첫 시작은 GitHub repository의 main 브랜치에 변경사항이 생기면 GitHub Actions를 트리거하도록 설정한다.\"]}),\"\\n\",n(c.p,{children:\"이후 GitHub Actions는\"}),\"\\n\",e(c.ol,{children:[\"\\n\",n(c.li,{children:\"프로젝트 파일을 빌드하고\"}),\"\\n\",n(c.li,{children:\"빌드 파일을 압축 후 S3 Bucket에 업로드한 뒤\"}),\"\\n\",n(c.li,{children:\"CodeDeploy가 정해진 동작을 하도록 트리거한다.\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"CodeDeploy는 EC2 instance 내에 Code Deploy Agent라는 이름으로 실행되어\"}),\"\\n\",e(c.ol,{children:[\"\\n\",n(c.li,{children:\"S3에 올라온 파일을 다운로드하고\"}),\"\\n\",n(c.li,{children:\"압축을 해제해 프로젝트 루트 디렉토리에 설치한 뒤\"}),\"\\n\",n(c.li,{children:\"정해진 스크립트를 실행한다.\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"이때 스크립트는 설치 전 후로 정의해 줄 수 있음!\"}),\"\\n\",n(c.p,{children:\"여기서 생기는 궁금점이 두 개 있다.\"}),\"\\n\",n(c.p,{children:\"Q1. 왜 의존성 설치부터 빌드하는 과정을 EC2 인스턴스가 직접 하지 않고, GitHub Actions의 가상 머신에서 실행할까?\\nQ2. 빌드한 파일을 압축한 뒤 곧장 EC2 인스턴스로 보내지 않고, S3로 올리는 이유가 뭘까?\"}),\"\\n\",n(c.p,{children:\"Q1번에 대해서 AI에게 얻어낸 답은 이렇다. (틀린 게 있다면 지적해 주세요!)\"}),\"\\n\",n(c.p,{children:\"A1-1) 의존성 설치 및 빌드 과정을 GitHub Actions runner의 통일된 환경에서 실행해 일관성을 높인다. 로컬이나 서버 환경은 상황마다 달라질 수 있으므로! (대신 이건 도커를 활용하면 훨씬 좋을 듯)\\nA1-2) 우리의 인스턴스는 서버 업무용! 서버 돌리는 데 쓰이는 메모리를 굳이 레포지토리 클론하고 프로젝트 빌드하는 데 쓸 이유가 없다. 서버용 컴퓨터는 서버 업무에만 집중하게 해서 메모리 부담도 줄이고, 관리 측면에서도 책임 소재를 확실히 하자. (그리고 우리의 계정은 프리티어! 아기자기한 메모리와 CPU를 위해서 최대한 부담을 줄여야 한다.)\"}),\"\\n\",n(c.p,{children:\"Q2번에 대해서 우선 압축 파일을 보내는 이유는 인스턴스의 네트워크 부하를 줄이기 위함도 있지만, 기본적으로는 압축 알고리즘이 효율적이기 때문이다. 압축과 해제에 소요되는 작업 시간과 부하가 생 파일을 네트워크로 전송하는 것보다 더 낫다!\"}),\"\\n\",n(c.p,{children:\"A2-1) 빌드된 배포 파일(Artifact)을 개인적인 공간인 인스턴스에서 관리하기보다, 중앙화된 저장소인 S3 Bucket에 놓아 관리를 용이하게 한다. 일관성이나 재사용성, 실패 시 복구 등을 훨씬 안정적으로 실행할 수 있다. (중요한 파일을 하드디스크에 저장하는 것처럼!)\\nA2-2) 빌드와 배포 단계를 분리한다. 중간에 S3를 두고 업로드 전까지는 빌드 및 테스트 과정, 업로드 후에는 EC2 인스턴스가 실행하는 배포 과정으로 명확히 나눌 수 있다.\"}),\"\\n\",n(c.p,{children:\"이제 이유를 알았으니 실행하러 가보자!\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"1. Bucket 생성 및 GitHub Actions가 사용할 IAM 계정 생성\"}),\"\\n\",n(c.p,{children:\"우선 압축한 빌드 파일을 올릴 bucket을 생성하자.\"}),\"\\n\",n(c.p,{children:n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/4.png\",alt:\"\"})}),\"\\n\",n(c.p,{children:\"rookie-review-ci-cd라는 이름으로 만들었다.\"}),\"\\n\",n(c.p,{children:\"그리고 GitHub Actions가 사용할 IAM 계정을 만들어야 한다. 이 계정은 S3와 CodeDeploy에 접근할 수 있는 권한이 있어야 한다.\"}),\"\\n\",n(c.p,{children:n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/5.png\",alt:\"\"})}),\"\\n\",n(c.p,{children:\"AmazonS3FullAccess, AWSCodeDeployFullAccess 두 정책을 할당한 뒤, GitHub Actions가 이 계정에 접근할 수 있도록 Access key를 발급받자.\"}),\"\\n\",n(c.p,{children:\"어떤 블로그에서는 EC2에도 접근할 수 있는 정책을 할당했는데, GitHub Actions는 직접적으로 EC2에 접근하지 않는다. EC2에는 CodeDeploy가 접근하므로 이 계정에는 CodeDeploy에 대한 정책만 할당해 주면 된다.\"}),\"\\n\",n(c.p,{children:\"이후 GitHub 레포지토리의 Setting > Secrets and variables > Actions로 이동해 Access key를 Repository Secrets을 등록하자.\"}),\"\\n\",n(c.p,{children:n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/6.png\",alt:\"\"})}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"2. EC2와 CodeDeploy에 할당할 역할 생성\"}),\"\\n\",n(c.p,{children:\"EC2와 CodeDeploy가 AWS 내에서 활동하기 위해 정책을 할당받아야 한다. 정책들을 모아놓은 역할을 만들어 지정해 주면 된다.\"}),\"\\n\",n(c.p,{children:\"EC2는 어떤 정책이 필요할까?\"}),\"\\n\",e(c.ol,{children:[\"\\n\",n(c.li,{children:\"S3에 업로드된 아티팩트를 다운로드 받아야 한다. -> AmazonS3ReadOnlyAccess\"}),\"\\n\",n(c.li,{children:\"EC2 인스턴스에서 CodeDeploy Agent가 작동할 때 필요한 권한이 있어야 한다. -> AmazonEC2RoleforAWSCodeDeploy\"}),\"\\n\"]}),\"\\n\",e(c.p,{children:[n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/7.png\",alt:\"\"}),\"\\n\",n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/8.png\",alt:\"\"})]}),\"\\n\",n(c.p,{children:\"그리고 CodeDeploy에 필요한 역할도 만들어주자.\"}),\"\\n\",n(c.p,{children:n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/9.png\",alt:\"\"})}),\"\\n\",n(c.p,{children:\"얘는 요거 하나만 있으면 된다.\"}),\"\\n\",n(c.hr,{}),\"\\n\",e(c.ol,{start:\"3\",children:[\"\\n\",n(c.li,{children:\"CodeDeploy 애플리케이션 및 배포 그룹 생성\"}),\"\\n\"]}),\"\\n\",e(c.p,{children:[\"CodeDeploy에 들어가 애플리케이션을 생성하자.\\n\",n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/10.png\",alt:\"\"})]}),\"\\n\",n(c.p,{children:\"CodeDeplooy를 이용해 EC2에 배포할 것이므로 EC2/On-premises로 플랫폼을 지정하자.\"}),\"\\n\",n(c.p,{children:\"배포 그룹을 생성하자.\"}),\"\\n\",e(c.p,{children:[n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/11.png\",alt:\"\"}),\"\\n\",n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/12.png\",alt:\"\"}),\"\\n\",n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/13.png\",alt:\"\"})]}),\"\\n\",n(c.p,{children:\"그룹에 아까 생성한 역할을 지정해 주고, 인스턴스를 연결해 주자. 로드 밸런서는 우선 체크 해제해 주자! (비용 절감)\"}),\"\\n\",n(c.p,{children:\"이후 GitHub Actions에 필요한 사항들을 secrets에 등록해 주자.\"}),\"\\n\",n(c.p,{children:n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/14.png\",alt:\"\"})}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"4. EC2 인스턴스에 CodeDeploy Agent 설치\"}),\"\\n\",n(c.p,{children:\"인스턴스에 접속한 뒤 다음 명령어를 실행하자.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" update\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" install\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ruby-full\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" apt\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" install\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" wget\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"cd\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"wget\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" https://aws-codedeploy-ap-northeast-2.s3.ap-northeast-2.amazonaws.com/latest/install\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"chmod\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" +x\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ./install\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ./install\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" auto\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" >\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /tmp/logfile\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (20.04 \"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"버전\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\")\"})]})]})})}),\"\\n\",n(c.p,{children:\"CodeDeploy 설치 및 실행을 위해 ruby-full, wget을 설치해야 한다. 그전에 둘의 패키지 목록을 최신 상태로 업데이트해준다.\"}),\"\\n\",n(c.p,{children:\"최신 버전인 ubuntu 20.04 버전의 경우 출력 로그 저장 경로를 지정하는 > /tmp/logfile 명령어를 추가하라고 공식 문서에 나와있다.\"}),\"\\n\",n(c.p,{children:\"아래 명령어를 통해 정상적으로 작동하는지 확인할 수 있다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:n(c.code,{children:e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" service\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" codedeploy-agent\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" status\"})]})})})}),\"\\n\",n(c.p,{children:\"Active: active (running) -> 정상적으로 CodeDeploy Agent가 작동 중에 있다!\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"5. GitHub Actions와 CodeDeploy 설정하기\"}),\"\\n\",n(c.p,{children:\"이제 GitHub Actions가 실행해 줄 작업을 정의하자.\"}),\"\\n\",n(c.p,{children:\".github/workflows/deploy.yml\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" deploy to S3\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# main 브랜치로 push 할 때 workflow 실행\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#81A1C1\"},children:\"on\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  push\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    branches\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" main\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  workflow_dispatch\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 환경 변수 설정\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"env\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  S3_BUCKET_NAME\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ${{ secrets.S3_BUCKET_NAME }}\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  CODE_DEPLOY_APPLICATION_NAME\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ${{ secrets.CODE_DEPLOY_APPLICATION_NAME }}\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }}\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"jobs\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  build\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    runs-on\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ubuntu-latest\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    steps\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # 레포지토리 clone\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Checkout\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        uses\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" actions/checkout@v4\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # Bun 설치 및 관련 환경 변수 설정\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Setup Bun\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          curl -fsSL https://bun.sh/install | bash\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:'          echo \"BUN_INSTALL=$HOME/.bun\" >> $GITHUB_ENV'})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:'          echo \"PATH=$HOME/.bun/bin:$PATH\" >> $GITHUB_ENV'})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # 프로젝트 의존성 설치\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Install dependencies\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" bun install\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # Next.js 앱 빌드\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Build next app\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" bun run build\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # 빌드한 파일과 프로젝트 소스를 압축해 .zip 파일로 만들기\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Make zip file\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:' zip -qq -r ./rookie_review.zip . -x \".git/*\"'})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"        # -qq: quit 모드로 실행 (에러나 경고메세지만 출력하도록 함)\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"        # -r: 지정된 디렉토리를 재귀적으로 압축 (하위 디렉토리와 파일들 모두 압축)\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"        # -x: 지정한 파일들 압축 과정에서 제외하기\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # Github Action에서 AWS의 권한 자격을 얻어오는 단계\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Configure AWS credentials\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        uses\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" aws-actions/configure-aws-credentials@v2\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        with\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"          aws-access-key-id\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ${{ secrets.AWS_ACCESS_KEY_ID }}\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"          aws-secret-access-key\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ${{ secrets.AWS_SECRET_ACCESS_KEY }}\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"          aws-region\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ${{ secrets.AWS_REGION }}\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # 압축된 파일을 S3에 업로드\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Upload to S3\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" aws s3 cp --region ap-northeast-2 ./rookie_review.zip s3://${{ env.S3_BUCKET_NAME }}/rookie_review.zip\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"        # aws s3 cp: AWS CLI 명령어로 파일 복사\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"        # --region ap-northeast-2: 업로드 대상 리전 설정\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"        # 파일을 S3 버킷의 루트 디렉토리에 업로드.\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"      # S3에 업로드 된 빌드 파일을 이용해 CodeDeploy가 정의된 동작을 하도록 트리거\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"      -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Code Deploy\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"        run\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          aws deploy create-deployment \\\\\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \\\\\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          --deployment-config-name CodeDeployDefault.AllAtOnce \\\\\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \\\\\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#A3BE8C\"},children:\"          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=rookie_review.zip\"})})]})})}),\"\\n\",n(c.p,{children:\"appspec.yml은 CodeDeploy가 실행할 작업 설정 파일이다.\"}),\"\\n\",n(c.p,{children:\"appspec.yml\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"version\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 0.0\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"os\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" linux\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"files\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"  -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" source\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    destination\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/waffle_rookie_review\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    overwrite\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" yes\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"permissions\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"  -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" object\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/waffle_rookie_review\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    owner\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ubuntu\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    group\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ubuntu\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"    mode\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 755\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"hooks\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  BeforeInstall\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"    -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" location\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" scripts/before-install.sh\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"      timeout\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 300\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"      runas\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ubuntu\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"  AfterInstall\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"    -\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\" location\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" scripts/after-install.sh\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"      timeout\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 300\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"      runas\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ubuntu\"})]})]})})}),\"\\n\",n(c.p,{children:\"여기서 나는 before-install.sh를 생성해 자동배포 전, 프로젝트 파일을 전부 지워버리고 새로 설치하도록 했다.\"}),\"\\n\",n(c.p,{children:\"scripts/before-install.sh\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#D8DEE9\"},children:\"REPOSITORY\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"=\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/home/ubuntu/waffle_rookie_review\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#616E88\"},children:\"# 모든 파일과 숨김 파일 삭제\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"find\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\" $REPOSITORY\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -mindepth\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 1\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -delete\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"echo\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"Cleanup completed.\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'})]})]})})}),\"\\n\",n(c.p,{children:\"이유는 다음과 같은 에러가 발생해서인데,\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#88C0D0\"},children:\"Message\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"The\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" deployment\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" failed\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" because\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" a\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" specified\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" file\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" already\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" exists\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" this\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" location:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/waffle_rookie_review/.gitignore\"})]})]})})}),\"\\n\",n(c.p,{children:\"배포 과정에서 CodeDeploy가 파일을 덮어씌우지 않고 에러를 뱉었기 때문. overwrite: yes 임에도 .gitignore 같은 민감한 파일들은 덮어쓰지 않는 걸까. 정확히는 잘 모르겠다. 어차피 기존 파일과 충돌할 수도 있으므로 완전히 삭제하고 새로 프로젝트를 깔아주는 게 좋기도 하고.\"}),\"\\n\",n(c.p,{children:\"그리고 after-install.sh를 생성해 배포 이후 정상적으로 pm2가 애플리케이션을 재실행하도록 설정했다.\"}),\"\\n\",n(c.p,{children:\"scripts/after-install.sh\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#D8DEE9\"},children:\"REPOSITORY\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"=\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/home/ubuntu/waffle_rookie_review\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#D8DEE9\"},children:\"BUN_PATH\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"=\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/home/ubuntu/.bun/bin/bun\"})]}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"cd\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\" $REPOSITORY\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" ||\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" {\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"  echo\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"Error: Failed to navigate to project directory.\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"  exit\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 1\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#ECEFF4\"},children:\"}\"})}),\"\\n\",n(c.span,{className:\"line\"}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#D8DEE9\"},children:\"$BUN_PATH\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" run deploy\"})]})]})})}),\"\\n\",n(c.p,{children:\"그리고 bun run deploy 명령어를 package.json에 추가하면 된다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:n(c.code,{children:e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:'\"deploy\"'}),n(c.span,{style:{color:\"#88C0D0\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"pm2 start ecosystem.config.js --env production\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'})]})})})}),\"\\n\",n(c.p,{children:\"마지막으로 CodeDeploy의 동작 이후 pm2가 정상적으로 애플리케이션을 재실행하도록 설정해 주면 된다.\"}),\"\\n\",n(c.p,{children:\"ecosystem.config.js\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#8FBCBB\"},children:\"module\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\".\"}),n(c.span,{style:{color:\"#8FBCBB\"},children:\"exports\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" =\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" {\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"  apps\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" [\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#ECEFF4\"},children:\"    {\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      name\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"waffle_rookie_review\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // 앱의 이름\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      script\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"./node_modules/next/dist/bin/next\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // Next.js 스크립트 경로\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      args\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"start\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // Next.js 앱을 시작할 때 사용할 인수\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      exec_mode\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"fork\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // 실행 모드: cluster 또는 fork 중 선택\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      instances\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"1\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // 클러스터 모드에서 실행할 인스턴스 수 (CPU 코어 수만큼)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      autorestart\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" true\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // 프로세스 자동 재시작 활성화\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      watch\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" true\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // 파일 변경 감지 활성화 (개발 중에만 활용)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      max_memory_restart\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"1G\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // 1GB 이상 메모리 사용 시 재시작\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      interpreter\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/home/ubuntu/.bun/bin/bun\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"      env\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" {\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"        NODE_ENV\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"production\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"}),n(c.span,{style:{color:\"#616E88\"},children:\" // Node.js 환경 변수\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"        PATH\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\":\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" `\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"${\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\"process\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\".\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\"env\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\".\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\"HOME\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"}\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/.bun/bin:\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"${\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\"process\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\".\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\"env\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\".\"}),n(c.span,{style:{color:\"#D8DEE9\"},children:\"PATH\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"}\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"`\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#ECEFF4\"},children:\"      },\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#ECEFF4\"},children:\"    },\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"  ]\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\",\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"}\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\";\"})]})]})})}),\"\\n\",n(c.p,{children:\"이러면 끝!....인 줄 알았으나 CodeDeploy에서 에러가 발생했다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"LifecycleEvent\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" AfterInstall\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"Script\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" scripts/after-install.sh\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"[\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"stderr\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"]\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"$ pm2 start ecosystem.config.js --env production\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"[\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"stderr\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"]\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"/usr/bin/bash: line 1: pm2: command not found\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#ECEFF4\"},children:\"[\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"stderr\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"]\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"error: script \"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"deploy\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" exited with code 127\"})]})]})})}),\"\\n\",n(c.p,{children:\"scripts에 적힌 pm2 명령어를 사용하는데 pm2를 찾지 못해 에러가 발생했다.\"}),\"\\n\",n(c.p,{children:\"다음과 같이 심볼릭 링크를 지정해 주면 시스템 PATH 환경 변수에 추가할 수 있다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ln\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -s\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/.bun/bin/pm2\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /usr/bin/pm2\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ln\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -s\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/.bun/bin/pm2\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /usr/local/bin/pm2\"})]})]})})}),\"\\n\",n(c.p,{children:\"pm2 경로는 설정마다 다를 수 있으니 which pm2로 확인하고 적절하게 바꿔주자.\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"6. 문제 해결하기\"}),\"\\n\",n(c.h5,{children:\"1) 환경변수 파일\"}),\"\\n\",n(c.p,{children:\"환경변수를 지정하는 .env 파일은 보안상의 이유로 .gitignore에 지정되어 있다. 민감한 파일들은 쏙 빼놓고 빌드하기 때문에 EC2 인스턴스의 프로젝트 디렉토리에 존재하지 않는다. 그래서 직접 원격 서버로 안전하게 전송하는 Secure Copy Protocol(SCP)를 사용해 옮겨주면 된다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:n(c.code,{children:e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"scp\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -i\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" <\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"key.pe\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"m\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\">\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" .env\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" <\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"ec2-use\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\">\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"@\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"<\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"EC2_PUBLIC_I\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"P\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\">\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\":/\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"<\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"target_director\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"y\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\">\"})]})})})}),\"\\n\",n(c.p,{children:\"key.pem에는 인스턴스에 접속할 때 쓰는 키의 경로,\"}),\"\\n\",n(c.p,{children:\"ec2-user는 ubuntu, target_directory는 내 경우 /home/ubuntu/waffle_rookie_review 다.\"}),\"\\n\",n(c.p,{children:\"그런데..! 뭔가 이상함을 느꼈다면 👍\"}),\"\\n\",n(c.p,{children:\"바로 CodeDeploy에서 before-install.sh에 프로젝트를 전부 밀어버리는 명령어가 있다! 그래서 .env 파일도 함께 지워지므로 다른 방법을 사용해야 한다.\"}),\"\\n\",n(c.p,{children:\"/home/ubuntu/env_backups 디렉토리를 만들어주고 이곳에 .env 파일을 옮겨주자.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:n(c.code,{children:e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"mv\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/waffle_rookie_review/.env.local\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/env_backups\"})]})})})}),\"\\n\",n(c.p,{children:\"그리고 after-install.sh에 백업 폴더에서 설치된 프로젝트 디렉토리로 .env 파일을 옮기는 명령어를 추가한다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#81A1C1\"},children:\"if\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" [\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" -f\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/home/ubuntu/env-backups/.env.local\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" ]\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\";\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" then\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"  echo\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"> Restoring .env.local file...\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"  cp\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/env-backups/.env.local\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /home/ubuntu/waffle_rookie_review/.env.local\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" ||\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" {\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    echo\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"Error: Failed to restore .env.local file.\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"    exit\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 1\"})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#ECEFF4\"},children:\"  }\"})}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#81A1C1\"},children:\"else\"})}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"  echo\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"Warning: No backup .env.local file found. Skipping restoration.\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'})]}),\"\\n\",n(c.span,{className:\"line\",children:n(c.span,{style:{color:\"#81A1C1\"},children:\"fi\"})})]})})}),\"\\n\",n(c.h5,{children:\"2) 메모리 부족\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:n(c.code,{children:e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"No\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" space\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" left\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" on\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" device\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" @\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" io_write\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" -\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /opt/codedeploy-agent/deployment-root/a9949aba-cefa-4167-bc1b-0b0498d28232/d-1KKQEAKKA/bundle.tar\"})]})})})}),\"\\n\",n(c.p,{children:\"프리티어의 눈물... df -h를 보면 메모리를 전부 사용 중인 걸 확인할 수 있다. 메모리를 최적화하는 것도 방법이겠지만... 그냥 메모리를 늘려주자.\"}),\"\\n\",n(c.p,{children:\"인스턴스로 들어가 volume에서 현재 우리가 배포한 인스턴스가 사용 중인 volume의 크기를 늘려주자.\"}),\"\\n\",n(c.p,{children:n(c.img,{src:\"/development/setup-ci-cd-with-codedeploy-github-actions/15.png\",alt:\"\"})}),\"\\n\",n(c.p,{children:\"그리고 인스턴스에서 디스크의 첫 번째 파티션 크기를 늘려준다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:n(c.code,{children:e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" growpart\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" /dev/xvda\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 1\"})]})})})}),\"\\n\",n(c.p,{children:\"다시 df -h로 확인해 보면 메모리가 여유롭여진 걸 볼 수 있다. 💰\"}),\"\\n\",n(c.h5,{children:\"3) CodeDeploy의 무한 로딩\"}),\"\\n\",n(c.p,{children:\"처음 CodeDeploy를 설정하고 배포를 기다리는데 3분이 넘도록 pending 상태였다. 어떤 에러가 발생하면 고치기라도 하지만 이 경우는 답이 없다. 컴퓨터가 멈추면 어떻게 하시나요? 저는 껐다 켭니다.\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" systemctl\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" stop\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" codedeploy-agent\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"sudo\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" systemctl\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" start\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" codedeploy-agent\"})]})]})})}),\"\\n\",n(c.p,{children:\"음음. 잘 작동하네요.\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.h3,{children:\"7. 이모저모\"}),\"\\n\",n(c.p,{children:\"지금까지 대부분 WebStorm에서 코드를 작성하고, main branch로 PR 한 뒤 ci를 거쳐 정상적인 코드만 병합했다. 자잘한 오타 같은 건 로컬에서 prettier를 통해 잡기도 하고, GitHub Actions에서도 이중으로 잡아주기에 오타는 전혀 신경 쓰지 않았는데... 이번엔 그런 거 없다. 오타로 처절하게 무너졌다.\"}),\"\\n\",e(c.ol,{children:[\"\\n\",n(c.li,{children:\"CodeDeploy의 작동을 설정하는 appspec.yml을 appsepc.yml로 잘못 적음\"}),\"\\n\",n(c.li,{children:\"프로젝트 루트 디렉토리인 waffle_rookie_review가 아니라 rookie_review로 잘못 지정함\"}),\"\\n\",n(c.li,{children:\"Region인 ap-northeast-2를 ap-northeas-2로 오타냄\"}),\"\\n\"]}),\"\\n\",n(c.p,{children:\"이 외에도 기억하지 못하는 숱한 오타가 나를 괴롭혔다. 후...\"}),\"\\n\",n(c.p,{children:\"그리고 패키지 매니저 겸 런타임 환경으로 Bun을 사용하며 어려움이 있었다. 대부분의 블로그들이 npm을 이용하다 보니 설정이나 명령어들이 대부분 npm 기준이었다.\"}),\"\\n\",n(c.p,{children:\"자잘하게 명령어를 고친 것 외에 가장 시간을 많이 먹었던 에러는 자동 배포 후 pm2 동작을 설정하는 ecosystem.config.js의 문제였다. 아무 생각 없이 node.js 환경에서 실행하도록 만들어진 설정을 갖다 쓰니 CI/CD가 끝날 때마다 서버가 터졌다. 로그를 살펴보면\"}),\"\\n\",n(l,{children:n(c.pre,{className:\"shiki nord\",style:{backgroundColor:\"#2e3440ff\",color:\"#d8dee9ff\"},tabIndex:\"0\",children:e(c.code,{children:[e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" TracingChannel.traceSync\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:diagnostics_channel:322:14)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" wrapModuleLoad\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:internal/modules/cjs/loader:220:24)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Module.require\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:internal/modules/cjs/loader:1311:12)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" require\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:internal/modules/helpers:136:16)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Object.\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"<\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"anonymou\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\"s\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\">\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (/home/ubuntu/waffle_rookie_review/node_modules/.bin/next:6:1)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Module._compile\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:internal/modules/cjs/loader:1554:14)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Object..js\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:internal/modules/cjs/loader:1706:10)\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"     at\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" Module.load\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" (node:internal/modules/cjs/loader:1289:32) \"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"{\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"   code:\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" '\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"MODULE_NOT_FOUND\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\",\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"   requireStack:\"}),n(c.span,{style:{color:\"#D8DEE9FF\"},children:\" [ \"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"/home/ubuntu/waffle_rookie_review/node_modules/.bin/next\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\"'\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" ]\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:\" }\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\" Node.js\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" v22.14.0\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\" error:\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" script\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:' \"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\"start\"}),n(c.span,{style:{color:\"#ECEFF4\"},children:'\"'}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" exited\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" with\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" code\"}),n(c.span,{style:{color:\"#B48EAD\"},children:\" 1\"})]}),\"\\n\",e(c.span,{className:\"line\",children:[n(c.span,{style:{color:\"#88C0D0\"},children:\"0\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\"|\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\"waffle_r\"}),n(c.span,{style:{color:\"#81A1C1\"},children:\" |\"}),n(c.span,{style:{color:\"#88C0D0\"},children:\" $\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" next\"}),n(c.span,{style:{color:\"#A3BE8C\"},children:\" start\"})]})]})})}),\"\\n\",n(c.p,{children:\"이런 식으로 node.js의 모듈을 찾을 수 없다고 나타났다. 처음에는\\n'아, pm2가 node.js 환경을 필요로 했었지. 그런데 버전이 22.14네. 뭐야! deploy.yml에는 20.11.1 버전으로 빌드하잖아.'\\n하고 곧장 인스턴스의 node.js 버전을 20.11.1로 지정했다.\"}),\"\\n\",n(c.p,{children:\"그런데도 여전히 문제가 있었다.\"}),\"\\n\",n(c.p,{children:\"프로젝트 루트 디렉토리에서 bun install을 한 뒤 pm2 restart 0으로 애플리케이션을 다시 실행하면 정상 작동되었다. 그럼 의존성 문제인가? 싶은데 node.js 버전을 이야기하고... 하다가 순간 아차 싶었다. 내 런타임 환경은 Bun인데!! interpreter를 bun 경로로 지정해 주니 말끔하게 다시 작동했다.\"}),\"\\n\",n(c.p,{children:\"지나고 보면 너무 당연하고 쉬운 문제인데... 왜 이렇게 오래 돌아갔을까. 그래도 기가막히게 실수하고 시간 낭비하며 제대로 깨우쳤다. 내가 정확히 무슨 환경에서 어떤 명령어로 무엇을 작동시키는지 알게 되었음! 지금처럼 직접 서버까지 건드려보고 시행착오한 뒤에 토이프로젝트를 했으면 훨씬 잘 참여할 수 있었을텐데. 문제가 발생하면 이게 서버쪽 문제인지 프론트쪽 문제인지 알아보려는 노력이라도 할 수 있었을텐데.\"}),\"\\n\",n(c.p,{children:\"그래도 억지로 Bun을 써보며 부딪힌 게 참 잘한 선택인 듯했다. 이게 아니었다면 서버쪽이 어떤 방식으로 돌아가는지 이해하게 만들어준 에러들을 못 만났을테니!\"}),\"\\n\",n(c.hr,{}),\"\\n\",n(c.p,{children:\"이후로 도메인 구매해서 연결하고 https 접속 연결하기... 는 간단할 듯하고 Docker를 한 번 써볼 생각인데, 그 전에 기능을 몇 개 개발한 뒤에 할 생각이다. 간단한 블로그를 구축해보고 싶은데 시간이 되려나 모르겠네.\"})]})}return{default:function(l={}){const{wrapper:e}=l.components||{};return e?n(e,{...l,children:n(_createMdxContent,{...l})}):_createMdxContent(l)}};",
    "permalink": "/development/setup-ci-cd-with-codedeploy-github-actions"
  }
]